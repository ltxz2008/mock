<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">


	<!-- mockCore -->
	<!--  <bean id="mockDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${mysql.driverClassName}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
		<property name="initialSize" value="${mysql.initialSize}" />
		<property name="minIdle" value="${mysql.minIdle}" />
		<property name="maxIdle" value="${mysql.maxIdle}" />
		<property name="maxTotal" value="${mysql.maxTotal}" />
		<property name="maxWaitMillis" value="${mysql.maxWaitMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${mysql.minEvictableIdleTimeMillis}" />
		<property name="testWhileIdle" value="${mysql.testWhileIdle}" />
		<property name="testOnBorrow" value="${mysql.testOnBorrow}" />
		<property name="testOnReturn" value="${mysql.testOnReturn}" />
		<property name="removeAbandonedOnMaintenance" value="${mysql.removeAbandonedOnMaintenance}" />
		<property name="removeAbandonedOnBorrow" value="${mysql.removeAbandonedOnBorrow}" />
		<property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${mysql.logAbandoned}" />
		<property name="validationQuery" value="select 1 " />
	</bean>-->
	
	<bean name="mockDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${druid.initialSize}" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${druid.maxActive}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${druid.minIdle}" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${druid.maxWait}" />

        <!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

        <property name="validationQuery" value="${druid.validationQuery}" />
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
        <property name="testOnReturn" value="${druid.testOnReturn}" />
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="${druid.removeAbandoned}" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${druid.logAbandoned}" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。 -->
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="proxyFilters">  
            <list>  
                <ref bean="wall-filter"/>  
            </list>  
        </property>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${druid.filters}" />
    </bean>

	<bean id="mockFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mockDataSource" />
		<property name="configLocation"
			value="classpath:mybatis/mybatis-mock-configuration.xml" />
		<property name="typeAliasesPackage" value="com.crt.test.mock.po" />
	</bean>

	<bean id="mockAutoMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.crt.test.mock.auto.mapper" />
		<property name="sqlSessionFactoryBeanName" value="mockFactory" />
	</bean>

	<bean id="mockDefineMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.crt.test.mock.define.mapper" />
		<property name="sqlSessionFactoryBeanName" value="mockFactory" />
	</bean>

</beans>
