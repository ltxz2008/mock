<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crt.test.mock.auto.mapper.ServiceMethedRuleMapper">
  <resultMap id="BaseResultMap" type="com.crt.test.mock.po.ServiceMethedRule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="when_script" jdbcType="VARCHAR" property="whenScript" />
    <result column="return_message" jdbcType="VARCHAR" property="returnMessage" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="exec_sort" jdbcType="INTEGER" property="execSort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, service_id, method_name, when_script, return_message, update_time, exec_sort
  </sql>
  <select id="selectByExample" parameterType="com.crt.test.mock.po.ServiceMethedRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service_methed_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_methed_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service_methed_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crt.test.mock.po.ServiceMethedRuleExample">
    delete from service_methed_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crt.test.mock.po.ServiceMethedRule">
    insert into service_methed_rule (id, service_id, method_name, 
      when_script, return_message, update_time, 
      exec_sort)
    values (#{id,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, #{methodName,jdbcType=VARCHAR}, 
      #{whenScript,jdbcType=VARCHAR}, #{returnMessage,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{execSort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.crt.test.mock.po.ServiceMethedRule">
    insert into service_methed_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="whenScript != null">
        when_script,
      </if>
      <if test="returnMessage != null">
        return_message,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="execSort != null">
        exec_sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="whenScript != null">
        #{whenScript,jdbcType=VARCHAR},
      </if>
      <if test="returnMessage != null">
        #{returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="execSort != null">
        #{execSort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crt.test.mock.po.ServiceMethedRuleExample" resultType="java.lang.Long">
    select count(*) from service_methed_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update service_methed_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.serviceId != null">
        service_id = #{record.serviceId,jdbcType=INTEGER},
      </if>
      <if test="record.methodName != null">
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.whenScript != null">
        when_script = #{record.whenScript,jdbcType=VARCHAR},
      </if>
      <if test="record.returnMessage != null">
        return_message = #{record.returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.execSort != null">
        exec_sort = #{record.execSort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update service_methed_rule
    set id = #{record.id,jdbcType=INTEGER},
      service_id = #{record.serviceId,jdbcType=INTEGER},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      when_script = #{record.whenScript,jdbcType=VARCHAR},
      return_message = #{record.returnMessage,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      exec_sort = #{record.execSort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crt.test.mock.po.ServiceMethedRule">
    update service_methed_rule
    <set>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="whenScript != null">
        when_script = #{whenScript,jdbcType=VARCHAR},
      </if>
      <if test="returnMessage != null">
        return_message = #{returnMessage,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="execSort != null">
        exec_sort = #{execSort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crt.test.mock.po.ServiceMethedRule">
    update service_methed_rule
    set service_id = #{serviceId,jdbcType=INTEGER},
      method_name = #{methodName,jdbcType=VARCHAR},
      when_script = #{whenScript,jdbcType=VARCHAR},
      return_message = #{returnMessage,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      exec_sort = #{execSort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>